// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace IrisDanded.Pulumi.Squadcast.Service
{
    /// <summary>
    /// [Maintenance Mode](https://support.squadcast.com/docs/maintenance-mode) enables you to reduce alert noise during the scheduled maintenance window. Alerts generated during active maintenance windows would be automatically suppressed and hence, no notifications are generated for those suppressed alerts.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Squadcast = IrisDanded.Pulumi.Squadcast;
    /// using Squadcast = Pulumi.Squadcast;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleTeam = Squadcast.GetTeam.Invoke(new()
    ///     {
    ///         Name = "example team name",
    ///     });
    /// 
    ///     var exampleService = Squadcast.GetService.Invoke(new()
    ///     {
    ///         Name = "example service name",
    ///         TeamId = exampleTeam.Apply(getTeamResult =&gt; getTeamResult.Id),
    ///     });
    /// 
    ///     var exampleServiceMaintenance = new Squadcast.Service.Maintenance("exampleServiceMaintenance", new()
    ///     {
    ///         ServiceId = exampleService.Apply(getServiceResult =&gt; getServiceResult.Id),
    ///         Windows = new[]
    ///         {
    ///             new Squadcast.Service.Inputs.MaintenanceWindowArgs
    ///             {
    ///                 From = "2032-06-01T10:30:00.000Z",
    ///                 Till = "2032-06-01T11:30:00.000Z",
    ///                 RepeatTill = "2032-06-30T10:30:00.000Z",
    ///                 RepeatFrequency = "week",
    ///             },
    ///             new Squadcast.Service.Inputs.MaintenanceWindowArgs
    ///             {
    ///                 From = "2032-07-01T10:30:00.000Z",
    ///                 Till = "2032-07-02T10:30:00.000Z",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// teamID:serviceID
    /// 
    /// Use 'Get All Teams' and 'Get All Services' APIs to get the id of the team and service respectively
    /// 
    /// ```sh
    /// $ pulumi import squadcast:service/maintenance:Maintenance test 62d2fe23a57381088224d726:62da76c088f407f9ca756ca5
    /// ```
    /// </summary>
    [SquadcastResourceType("squadcast:service/maintenance:Maintenance")]
    public partial class Maintenance : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Service id.
        /// </summary>
        [Output("serviceId")]
        public Output<string> ServiceId { get; private set; } = null!;

        /// <summary>
        /// Date and Time range during which maintenance would be carried out
        /// </summary>
        [Output("windows")]
        public Output<ImmutableArray<Outputs.MaintenanceWindow>> Windows { get; private set; } = null!;


        /// <summary>
        /// Create a Maintenance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Maintenance(string name, MaintenanceArgs args, CustomResourceOptions? options = null)
            : base("squadcast:service/maintenance:Maintenance", name, args ?? new MaintenanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Maintenance(string name, Input<string> id, MaintenanceState? state = null, CustomResourceOptions? options = null)
            : base("squadcast:service/maintenance:Maintenance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/IrisDande/pulumi-squadcast",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Maintenance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Maintenance Get(string name, Input<string> id, MaintenanceState? state = null, CustomResourceOptions? options = null)
        {
            return new Maintenance(name, id, state, options);
        }
    }

    public sealed class MaintenanceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Service id.
        /// </summary>
        [Input("serviceId", required: true)]
        public Input<string> ServiceId { get; set; } = null!;

        [Input("windows")]
        private InputList<Inputs.MaintenanceWindowArgs>? _windows;

        /// <summary>
        /// Date and Time range during which maintenance would be carried out
        /// </summary>
        public InputList<Inputs.MaintenanceWindowArgs> Windows
        {
            get => _windows ?? (_windows = new InputList<Inputs.MaintenanceWindowArgs>());
            set => _windows = value;
        }

        public MaintenanceArgs()
        {
        }
        public static new MaintenanceArgs Empty => new MaintenanceArgs();
    }

    public sealed class MaintenanceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Service id.
        /// </summary>
        [Input("serviceId")]
        public Input<string>? ServiceId { get; set; }

        [Input("windows")]
        private InputList<Inputs.MaintenanceWindowGetArgs>? _windows;

        /// <summary>
        /// Date and Time range during which maintenance would be carried out
        /// </summary>
        public InputList<Inputs.MaintenanceWindowGetArgs> Windows
        {
            get => _windows ?? (_windows = new InputList<Inputs.MaintenanceWindowGetArgs>());
            set => _windows = value;
        }

        public MaintenanceState()
        {
        }
        public static new MaintenanceState Empty => new MaintenanceState();
    }
}
