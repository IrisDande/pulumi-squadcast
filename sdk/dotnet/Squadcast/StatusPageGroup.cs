// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace IrisDanded.Pulumi.Squadcast
{
    /// <summary>
    /// Status page group is a collection of components. You can add multiple components to a group and show the status of the group on your status page. You can also add multiple groups and show the status of each group on your status page.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Squadcast = IrisDanded.Pulumi.Squadcast;
    /// using Squadcast = Pulumi.Squadcast;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var team = Squadcast.GetTeam.Invoke(new()
    ///     {
    ///         Name = "Default Team",
    ///     });
    /// 
    ///     var user = Squadcast.GetUser.Invoke(new()
    ///     {
    ///         Email = "john@example.com",
    ///     });
    /// 
    ///     var testStatusPage = new Squadcast.StatusPage("testStatusPage", new()
    ///     {
    ///         TeamId = team.Apply(getTeamResult =&gt; getTeamResult.Id),
    ///         Description = "Status Page description",
    ///         IsPublic = true,
    ///         DomainName = "test-statuspage",
    ///         Timezone = "Asia/Kolkata",
    ///         ContactEmail = "example@test.com",
    ///         ThemeColor = new Squadcast.Inputs.StatusPageThemeColorArgs
    ///         {
    ///             Primary = "#000000",
    ///             Secondary = "#dddddd",
    ///         },
    ///         Owner = new Squadcast.Inputs.StatusPageOwnerArgs
    ///         {
    ///             Type = "user",
    ///             Id = user.Apply(getUserResult =&gt; getUserResult.Id),
    ///         },
    ///     });
    /// 
    ///     var exampleGroup = new Squadcast.StatusPageGroup("exampleGroup", new()
    ///     {
    ///         StatusPageId = testStatusPage.Id,
    ///     });
    /// 
    ///     var exampleComponent = new Squadcast.StatusPageComponent("exampleComponent", new()
    ///     {
    ///         StatusPageId = testStatusPage.Id,
    ///         Description = "Component 1 description",
    ///         GroupId = exampleGroup.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// statusPageID:groupID
    /// 
    /// ```sh
    /// $ pulumi import squadcast:index/statusPageGroup:StatusPageGroup test_group 300:246
    /// ```
    /// </summary>
    [SquadcastResourceType("squadcast:index/statusPageGroup:StatusPageGroup")]
    public partial class StatusPageGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Name of the status page group.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Id of the status page to which this group belongs to.
        /// </summary>
        [Output("statusPageId")]
        public Output<string> StatusPageId { get; private set; } = null!;


        /// <summary>
        /// Create a StatusPageGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public StatusPageGroup(string name, StatusPageGroupArgs args, CustomResourceOptions? options = null)
            : base("squadcast:index/statusPageGroup:StatusPageGroup", name, args ?? new StatusPageGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private StatusPageGroup(string name, Input<string> id, StatusPageGroupState? state = null, CustomResourceOptions? options = null)
            : base("squadcast:index/statusPageGroup:StatusPageGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/IrisDande/pulumi-squadcast",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing StatusPageGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static StatusPageGroup Get(string name, Input<string> id, StatusPageGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new StatusPageGroup(name, id, state, options);
        }
    }

    public sealed class StatusPageGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the status page group.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Id of the status page to which this group belongs to.
        /// </summary>
        [Input("statusPageId", required: true)]
        public Input<string> StatusPageId { get; set; } = null!;

        public StatusPageGroupArgs()
        {
        }
        public static new StatusPageGroupArgs Empty => new StatusPageGroupArgs();
    }

    public sealed class StatusPageGroupState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the status page group.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Id of the status page to which this group belongs to.
        /// </summary>
        [Input("statusPageId")]
        public Input<string>? StatusPageId { get; set; }

        public StatusPageGroupState()
        {
        }
        public static new StatusPageGroupState Empty => new StatusPageGroupState();
    }
}
