// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package status

import (
	"context"
	"reflect"

	"github.com/IrisDande/pulumi-squadcast/sdk/go/squadcast/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type PageOwner struct {
	// Status page owner id.
	Id string `pulumi:"id"`
	// Status page owner type Supported values are 'user' or 'squad'.
	Type string `pulumi:"type"`
}

// PageOwnerInput is an input type that accepts PageOwnerArgs and PageOwnerOutput values.
// You can construct a concrete instance of `PageOwnerInput` via:
//
//	PageOwnerArgs{...}
type PageOwnerInput interface {
	pulumi.Input

	ToPageOwnerOutput() PageOwnerOutput
	ToPageOwnerOutputWithContext(context.Context) PageOwnerOutput
}

type PageOwnerArgs struct {
	// Status page owner id.
	Id pulumi.StringInput `pulumi:"id"`
	// Status page owner type Supported values are 'user' or 'squad'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PageOwnerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PageOwner)(nil)).Elem()
}

func (i PageOwnerArgs) ToPageOwnerOutput() PageOwnerOutput {
	return i.ToPageOwnerOutputWithContext(context.Background())
}

func (i PageOwnerArgs) ToPageOwnerOutputWithContext(ctx context.Context) PageOwnerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PageOwnerOutput)
}

func (i PageOwnerArgs) ToPageOwnerPtrOutput() PageOwnerPtrOutput {
	return i.ToPageOwnerPtrOutputWithContext(context.Background())
}

func (i PageOwnerArgs) ToPageOwnerPtrOutputWithContext(ctx context.Context) PageOwnerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PageOwnerOutput).ToPageOwnerPtrOutputWithContext(ctx)
}

// PageOwnerPtrInput is an input type that accepts PageOwnerArgs, PageOwnerPtr and PageOwnerPtrOutput values.
// You can construct a concrete instance of `PageOwnerPtrInput` via:
//
//	        PageOwnerArgs{...}
//
//	or:
//
//	        nil
type PageOwnerPtrInput interface {
	pulumi.Input

	ToPageOwnerPtrOutput() PageOwnerPtrOutput
	ToPageOwnerPtrOutputWithContext(context.Context) PageOwnerPtrOutput
}

type pageOwnerPtrType PageOwnerArgs

func PageOwnerPtr(v *PageOwnerArgs) PageOwnerPtrInput {
	return (*pageOwnerPtrType)(v)
}

func (*pageOwnerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PageOwner)(nil)).Elem()
}

func (i *pageOwnerPtrType) ToPageOwnerPtrOutput() PageOwnerPtrOutput {
	return i.ToPageOwnerPtrOutputWithContext(context.Background())
}

func (i *pageOwnerPtrType) ToPageOwnerPtrOutputWithContext(ctx context.Context) PageOwnerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PageOwnerPtrOutput)
}

type PageOwnerOutput struct{ *pulumi.OutputState }

func (PageOwnerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PageOwner)(nil)).Elem()
}

func (o PageOwnerOutput) ToPageOwnerOutput() PageOwnerOutput {
	return o
}

func (o PageOwnerOutput) ToPageOwnerOutputWithContext(ctx context.Context) PageOwnerOutput {
	return o
}

func (o PageOwnerOutput) ToPageOwnerPtrOutput() PageOwnerPtrOutput {
	return o.ToPageOwnerPtrOutputWithContext(context.Background())
}

func (o PageOwnerOutput) ToPageOwnerPtrOutputWithContext(ctx context.Context) PageOwnerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PageOwner) *PageOwner {
		return &v
	}).(PageOwnerPtrOutput)
}

// Status page owner id.
func (o PageOwnerOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PageOwner) string { return v.Id }).(pulumi.StringOutput)
}

// Status page owner type Supported values are 'user' or 'squad'.
func (o PageOwnerOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PageOwner) string { return v.Type }).(pulumi.StringOutput)
}

type PageOwnerPtrOutput struct{ *pulumi.OutputState }

func (PageOwnerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PageOwner)(nil)).Elem()
}

func (o PageOwnerPtrOutput) ToPageOwnerPtrOutput() PageOwnerPtrOutput {
	return o
}

func (o PageOwnerPtrOutput) ToPageOwnerPtrOutputWithContext(ctx context.Context) PageOwnerPtrOutput {
	return o
}

func (o PageOwnerPtrOutput) Elem() PageOwnerOutput {
	return o.ApplyT(func(v *PageOwner) PageOwner {
		if v != nil {
			return *v
		}
		var ret PageOwner
		return ret
	}).(PageOwnerOutput)
}

// Status page owner id.
func (o PageOwnerPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageOwner) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Status page owner type Supported values are 'user' or 'squad'.
func (o PageOwnerPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageOwner) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type PageThemeColor struct {
	// Primary color.
	Primary string `pulumi:"primary"`
	// Secondary color.
	Secondary string `pulumi:"secondary"`
}

// PageThemeColorInput is an input type that accepts PageThemeColorArgs and PageThemeColorOutput values.
// You can construct a concrete instance of `PageThemeColorInput` via:
//
//	PageThemeColorArgs{...}
type PageThemeColorInput interface {
	pulumi.Input

	ToPageThemeColorOutput() PageThemeColorOutput
	ToPageThemeColorOutputWithContext(context.Context) PageThemeColorOutput
}

type PageThemeColorArgs struct {
	// Primary color.
	Primary pulumi.StringInput `pulumi:"primary"`
	// Secondary color.
	Secondary pulumi.StringInput `pulumi:"secondary"`
}

func (PageThemeColorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PageThemeColor)(nil)).Elem()
}

func (i PageThemeColorArgs) ToPageThemeColorOutput() PageThemeColorOutput {
	return i.ToPageThemeColorOutputWithContext(context.Background())
}

func (i PageThemeColorArgs) ToPageThemeColorOutputWithContext(ctx context.Context) PageThemeColorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PageThemeColorOutput)
}

func (i PageThemeColorArgs) ToPageThemeColorPtrOutput() PageThemeColorPtrOutput {
	return i.ToPageThemeColorPtrOutputWithContext(context.Background())
}

func (i PageThemeColorArgs) ToPageThemeColorPtrOutputWithContext(ctx context.Context) PageThemeColorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PageThemeColorOutput).ToPageThemeColorPtrOutputWithContext(ctx)
}

// PageThemeColorPtrInput is an input type that accepts PageThemeColorArgs, PageThemeColorPtr and PageThemeColorPtrOutput values.
// You can construct a concrete instance of `PageThemeColorPtrInput` via:
//
//	        PageThemeColorArgs{...}
//
//	or:
//
//	        nil
type PageThemeColorPtrInput interface {
	pulumi.Input

	ToPageThemeColorPtrOutput() PageThemeColorPtrOutput
	ToPageThemeColorPtrOutputWithContext(context.Context) PageThemeColorPtrOutput
}

type pageThemeColorPtrType PageThemeColorArgs

func PageThemeColorPtr(v *PageThemeColorArgs) PageThemeColorPtrInput {
	return (*pageThemeColorPtrType)(v)
}

func (*pageThemeColorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PageThemeColor)(nil)).Elem()
}

func (i *pageThemeColorPtrType) ToPageThemeColorPtrOutput() PageThemeColorPtrOutput {
	return i.ToPageThemeColorPtrOutputWithContext(context.Background())
}

func (i *pageThemeColorPtrType) ToPageThemeColorPtrOutputWithContext(ctx context.Context) PageThemeColorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PageThemeColorPtrOutput)
}

type PageThemeColorOutput struct{ *pulumi.OutputState }

func (PageThemeColorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PageThemeColor)(nil)).Elem()
}

func (o PageThemeColorOutput) ToPageThemeColorOutput() PageThemeColorOutput {
	return o
}

func (o PageThemeColorOutput) ToPageThemeColorOutputWithContext(ctx context.Context) PageThemeColorOutput {
	return o
}

func (o PageThemeColorOutput) ToPageThemeColorPtrOutput() PageThemeColorPtrOutput {
	return o.ToPageThemeColorPtrOutputWithContext(context.Background())
}

func (o PageThemeColorOutput) ToPageThemeColorPtrOutputWithContext(ctx context.Context) PageThemeColorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PageThemeColor) *PageThemeColor {
		return &v
	}).(PageThemeColorPtrOutput)
}

// Primary color.
func (o PageThemeColorOutput) Primary() pulumi.StringOutput {
	return o.ApplyT(func(v PageThemeColor) string { return v.Primary }).(pulumi.StringOutput)
}

// Secondary color.
func (o PageThemeColorOutput) Secondary() pulumi.StringOutput {
	return o.ApplyT(func(v PageThemeColor) string { return v.Secondary }).(pulumi.StringOutput)
}

type PageThemeColorPtrOutput struct{ *pulumi.OutputState }

func (PageThemeColorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PageThemeColor)(nil)).Elem()
}

func (o PageThemeColorPtrOutput) ToPageThemeColorPtrOutput() PageThemeColorPtrOutput {
	return o
}

func (o PageThemeColorPtrOutput) ToPageThemeColorPtrOutputWithContext(ctx context.Context) PageThemeColorPtrOutput {
	return o
}

func (o PageThemeColorPtrOutput) Elem() PageThemeColorOutput {
	return o.ApplyT(func(v *PageThemeColor) PageThemeColor {
		if v != nil {
			return *v
		}
		var ret PageThemeColor
		return ret
	}).(PageThemeColorOutput)
}

// Primary color.
func (o PageThemeColorPtrOutput) Primary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageThemeColor) *string {
		if v == nil {
			return nil
		}
		return &v.Primary
	}).(pulumi.StringPtrOutput)
}

// Secondary color.
func (o PageThemeColorPtrOutput) Secondary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageThemeColor) *string {
		if v == nil {
			return nil
		}
		return &v.Secondary
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PageOwnerInput)(nil)).Elem(), PageOwnerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PageOwnerPtrInput)(nil)).Elem(), PageOwnerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PageThemeColorInput)(nil)).Elem(), PageThemeColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PageThemeColorPtrInput)(nil)).Elem(), PageThemeColorArgs{})
	pulumi.RegisterOutputType(PageOwnerOutput{})
	pulumi.RegisterOutputType(PageOwnerPtrOutput{})
	pulumi.RegisterOutputType(PageThemeColorOutput{})
	pulumi.RegisterOutputType(PageThemeColorPtrOutput{})
}
