// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package squadcast

import (
	"context"
	"reflect"

	"errors"
	"github.com/IrisDande/pulumi-squadcast/sdk/go/squadcast/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Status page component defines a component that represents a specific element within a status page. This resource enables you to configure various attributes of the component, and optionally associate it with a group on the status page.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/IrisDande/pulumi-squadcast/sdk/go/squadcast"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			team, err := squadcast.LookupTeam(ctx, &squadcast.LookupTeamArgs{
//				Name: "Default Team",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			user, err := squadcast.LookupUser(ctx, &squadcast.LookupUserArgs{
//				Email: "john@example.com",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			testStatusPage, err := squadcast.NewStatusPage(ctx, "testStatusPage", &squadcast.StatusPageArgs{
//				TeamId:       pulumi.String(team.Id),
//				Description:  pulumi.String("Status Page description"),
//				IsPublic:     pulumi.Bool(true),
//				DomainName:   pulumi.String("test-statuspage"),
//				Timezone:     pulumi.String("Asia/Kolkata"),
//				ContactEmail: pulumi.String("example@test.com"),
//				ThemeColor: &squadcast.StatusPageThemeColorArgs{
//					Primary:   pulumi.String("#000000"),
//					Secondary: pulumi.String("#dddddd"),
//				},
//				Owner: &squadcast.StatusPageOwnerArgs{
//					Type: pulumi.String("user"),
//					Id:   pulumi.String(user.Id),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleGroup, err := squadcast.NewStatusPageGroup(ctx, "exampleGroup", &squadcast.StatusPageGroupArgs{
//				StatusPageId: testStatusPage.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = squadcast.NewStatusPageComponent(ctx, "exampleComponent", &squadcast.StatusPageComponentArgs{
//				StatusPageId: testStatusPage.ID(),
//				Description:  pulumi.String("Component 1 description"),
//				GroupId:      exampleGroup.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// statusPageID:componentID
//
// ```sh
// $ pulumi import squadcast:index/statusPageComponent:StatusPageComponent test_component 300:573
// ```
type StatusPageComponent struct {
	pulumi.CustomResourceState

	// Description of the status page component.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Id of the group to which this component belongs to.
	GroupId pulumi.StringPtrOutput `pulumi:"groupId"`
	// Name of the status page component.
	Name pulumi.StringOutput `pulumi:"name"`
	// Id of the status page to which this component belongs to.
	StatusPageId pulumi.StringOutput `pulumi:"statusPageId"`
}

// NewStatusPageComponent registers a new resource with the given unique name, arguments, and options.
func NewStatusPageComponent(ctx *pulumi.Context,
	name string, args *StatusPageComponentArgs, opts ...pulumi.ResourceOption) (*StatusPageComponent, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.StatusPageId == nil {
		return nil, errors.New("invalid value for required argument 'StatusPageId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource StatusPageComponent
	err := ctx.RegisterResource("squadcast:index/statusPageComponent:StatusPageComponent", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStatusPageComponent gets an existing StatusPageComponent resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStatusPageComponent(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StatusPageComponentState, opts ...pulumi.ResourceOption) (*StatusPageComponent, error) {
	var resource StatusPageComponent
	err := ctx.ReadResource("squadcast:index/statusPageComponent:StatusPageComponent", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StatusPageComponent resources.
type statusPageComponentState struct {
	// Description of the status page component.
	Description *string `pulumi:"description"`
	// Id of the group to which this component belongs to.
	GroupId *string `pulumi:"groupId"`
	// Name of the status page component.
	Name *string `pulumi:"name"`
	// Id of the status page to which this component belongs to.
	StatusPageId *string `pulumi:"statusPageId"`
}

type StatusPageComponentState struct {
	// Description of the status page component.
	Description pulumi.StringPtrInput
	// Id of the group to which this component belongs to.
	GroupId pulumi.StringPtrInput
	// Name of the status page component.
	Name pulumi.StringPtrInput
	// Id of the status page to which this component belongs to.
	StatusPageId pulumi.StringPtrInput
}

func (StatusPageComponentState) ElementType() reflect.Type {
	return reflect.TypeOf((*statusPageComponentState)(nil)).Elem()
}

type statusPageComponentArgs struct {
	// Description of the status page component.
	Description *string `pulumi:"description"`
	// Id of the group to which this component belongs to.
	GroupId *string `pulumi:"groupId"`
	// Name of the status page component.
	Name *string `pulumi:"name"`
	// Id of the status page to which this component belongs to.
	StatusPageId string `pulumi:"statusPageId"`
}

// The set of arguments for constructing a StatusPageComponent resource.
type StatusPageComponentArgs struct {
	// Description of the status page component.
	Description pulumi.StringPtrInput
	// Id of the group to which this component belongs to.
	GroupId pulumi.StringPtrInput
	// Name of the status page component.
	Name pulumi.StringPtrInput
	// Id of the status page to which this component belongs to.
	StatusPageId pulumi.StringInput
}

func (StatusPageComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*statusPageComponentArgs)(nil)).Elem()
}

type StatusPageComponentInput interface {
	pulumi.Input

	ToStatusPageComponentOutput() StatusPageComponentOutput
	ToStatusPageComponentOutputWithContext(ctx context.Context) StatusPageComponentOutput
}

func (*StatusPageComponent) ElementType() reflect.Type {
	return reflect.TypeOf((**StatusPageComponent)(nil)).Elem()
}

func (i *StatusPageComponent) ToStatusPageComponentOutput() StatusPageComponentOutput {
	return i.ToStatusPageComponentOutputWithContext(context.Background())
}

func (i *StatusPageComponent) ToStatusPageComponentOutputWithContext(ctx context.Context) StatusPageComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusPageComponentOutput)
}

// StatusPageComponentArrayInput is an input type that accepts StatusPageComponentArray and StatusPageComponentArrayOutput values.
// You can construct a concrete instance of `StatusPageComponentArrayInput` via:
//
//	StatusPageComponentArray{ StatusPageComponentArgs{...} }
type StatusPageComponentArrayInput interface {
	pulumi.Input

	ToStatusPageComponentArrayOutput() StatusPageComponentArrayOutput
	ToStatusPageComponentArrayOutputWithContext(context.Context) StatusPageComponentArrayOutput
}

type StatusPageComponentArray []StatusPageComponentInput

func (StatusPageComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StatusPageComponent)(nil)).Elem()
}

func (i StatusPageComponentArray) ToStatusPageComponentArrayOutput() StatusPageComponentArrayOutput {
	return i.ToStatusPageComponentArrayOutputWithContext(context.Background())
}

func (i StatusPageComponentArray) ToStatusPageComponentArrayOutputWithContext(ctx context.Context) StatusPageComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusPageComponentArrayOutput)
}

// StatusPageComponentMapInput is an input type that accepts StatusPageComponentMap and StatusPageComponentMapOutput values.
// You can construct a concrete instance of `StatusPageComponentMapInput` via:
//
//	StatusPageComponentMap{ "key": StatusPageComponentArgs{...} }
type StatusPageComponentMapInput interface {
	pulumi.Input

	ToStatusPageComponentMapOutput() StatusPageComponentMapOutput
	ToStatusPageComponentMapOutputWithContext(context.Context) StatusPageComponentMapOutput
}

type StatusPageComponentMap map[string]StatusPageComponentInput

func (StatusPageComponentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StatusPageComponent)(nil)).Elem()
}

func (i StatusPageComponentMap) ToStatusPageComponentMapOutput() StatusPageComponentMapOutput {
	return i.ToStatusPageComponentMapOutputWithContext(context.Background())
}

func (i StatusPageComponentMap) ToStatusPageComponentMapOutputWithContext(ctx context.Context) StatusPageComponentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusPageComponentMapOutput)
}

type StatusPageComponentOutput struct{ *pulumi.OutputState }

func (StatusPageComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StatusPageComponent)(nil)).Elem()
}

func (o StatusPageComponentOutput) ToStatusPageComponentOutput() StatusPageComponentOutput {
	return o
}

func (o StatusPageComponentOutput) ToStatusPageComponentOutputWithContext(ctx context.Context) StatusPageComponentOutput {
	return o
}

// Description of the status page component.
func (o StatusPageComponentOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StatusPageComponent) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Id of the group to which this component belongs to.
func (o StatusPageComponentOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StatusPageComponent) pulumi.StringPtrOutput { return v.GroupId }).(pulumi.StringPtrOutput)
}

// Name of the status page component.
func (o StatusPageComponentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *StatusPageComponent) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Id of the status page to which this component belongs to.
func (o StatusPageComponentOutput) StatusPageId() pulumi.StringOutput {
	return o.ApplyT(func(v *StatusPageComponent) pulumi.StringOutput { return v.StatusPageId }).(pulumi.StringOutput)
}

type StatusPageComponentArrayOutput struct{ *pulumi.OutputState }

func (StatusPageComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StatusPageComponent)(nil)).Elem()
}

func (o StatusPageComponentArrayOutput) ToStatusPageComponentArrayOutput() StatusPageComponentArrayOutput {
	return o
}

func (o StatusPageComponentArrayOutput) ToStatusPageComponentArrayOutputWithContext(ctx context.Context) StatusPageComponentArrayOutput {
	return o
}

func (o StatusPageComponentArrayOutput) Index(i pulumi.IntInput) StatusPageComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *StatusPageComponent {
		return vs[0].([]*StatusPageComponent)[vs[1].(int)]
	}).(StatusPageComponentOutput)
}

type StatusPageComponentMapOutput struct{ *pulumi.OutputState }

func (StatusPageComponentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StatusPageComponent)(nil)).Elem()
}

func (o StatusPageComponentMapOutput) ToStatusPageComponentMapOutput() StatusPageComponentMapOutput {
	return o
}

func (o StatusPageComponentMapOutput) ToStatusPageComponentMapOutputWithContext(ctx context.Context) StatusPageComponentMapOutput {
	return o
}

func (o StatusPageComponentMapOutput) MapIndex(k pulumi.StringInput) StatusPageComponentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *StatusPageComponent {
		return vs[0].(map[string]*StatusPageComponent)[vs[1].(string)]
	}).(StatusPageComponentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*StatusPageComponentInput)(nil)).Elem(), &StatusPageComponent{})
	pulumi.RegisterInputType(reflect.TypeOf((*StatusPageComponentArrayInput)(nil)).Elem(), StatusPageComponentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StatusPageComponentMapInput)(nil)).Elem(), StatusPageComponentMap{})
	pulumi.RegisterOutputType(StatusPageComponentOutput{})
	pulumi.RegisterOutputType(StatusPageComponentArrayOutput{})
	pulumi.RegisterOutputType(StatusPageComponentMapOutput{})
}
