// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rule

import (
	"context"
	"reflect"

	"github.com/IrisDande/pulumi-squadcast/sdk/go/squadcast/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type V2BasicExpression struct {
	// left hand side dropdown value
	Lhs string `pulumi:"lhs"`
	// operator (is, is*not, matches, not*contains)
	Op string `pulumi:"op"`
	// right hand side value
	Rhs string `pulumi:"rhs"`
}

// V2BasicExpressionInput is an input type that accepts V2BasicExpressionArgs and V2BasicExpressionOutput values.
// You can construct a concrete instance of `V2BasicExpressionInput` via:
//
//	V2BasicExpressionArgs{...}
type V2BasicExpressionInput interface {
	pulumi.Input

	ToV2BasicExpressionOutput() V2BasicExpressionOutput
	ToV2BasicExpressionOutputWithContext(context.Context) V2BasicExpressionOutput
}

type V2BasicExpressionArgs struct {
	// left hand side dropdown value
	Lhs pulumi.StringInput `pulumi:"lhs"`
	// operator (is, is*not, matches, not*contains)
	Op pulumi.StringInput `pulumi:"op"`
	// right hand side value
	Rhs pulumi.StringInput `pulumi:"rhs"`
}

func (V2BasicExpressionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*V2BasicExpression)(nil)).Elem()
}

func (i V2BasicExpressionArgs) ToV2BasicExpressionOutput() V2BasicExpressionOutput {
	return i.ToV2BasicExpressionOutputWithContext(context.Background())
}

func (i V2BasicExpressionArgs) ToV2BasicExpressionOutputWithContext(ctx context.Context) V2BasicExpressionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(V2BasicExpressionOutput)
}

// V2BasicExpressionArrayInput is an input type that accepts V2BasicExpressionArray and V2BasicExpressionArrayOutput values.
// You can construct a concrete instance of `V2BasicExpressionArrayInput` via:
//
//	V2BasicExpressionArray{ V2BasicExpressionArgs{...} }
type V2BasicExpressionArrayInput interface {
	pulumi.Input

	ToV2BasicExpressionArrayOutput() V2BasicExpressionArrayOutput
	ToV2BasicExpressionArrayOutputWithContext(context.Context) V2BasicExpressionArrayOutput
}

type V2BasicExpressionArray []V2BasicExpressionInput

func (V2BasicExpressionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]V2BasicExpression)(nil)).Elem()
}

func (i V2BasicExpressionArray) ToV2BasicExpressionArrayOutput() V2BasicExpressionArrayOutput {
	return i.ToV2BasicExpressionArrayOutputWithContext(context.Background())
}

func (i V2BasicExpressionArray) ToV2BasicExpressionArrayOutputWithContext(ctx context.Context) V2BasicExpressionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(V2BasicExpressionArrayOutput)
}

type V2BasicExpressionOutput struct{ *pulumi.OutputState }

func (V2BasicExpressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*V2BasicExpression)(nil)).Elem()
}

func (o V2BasicExpressionOutput) ToV2BasicExpressionOutput() V2BasicExpressionOutput {
	return o
}

func (o V2BasicExpressionOutput) ToV2BasicExpressionOutputWithContext(ctx context.Context) V2BasicExpressionOutput {
	return o
}

// left hand side dropdown value
func (o V2BasicExpressionOutput) Lhs() pulumi.StringOutput {
	return o.ApplyT(func(v V2BasicExpression) string { return v.Lhs }).(pulumi.StringOutput)
}

// operator (is, is*not, matches, not*contains)
func (o V2BasicExpressionOutput) Op() pulumi.StringOutput {
	return o.ApplyT(func(v V2BasicExpression) string { return v.Op }).(pulumi.StringOutput)
}

// right hand side value
func (o V2BasicExpressionOutput) Rhs() pulumi.StringOutput {
	return o.ApplyT(func(v V2BasicExpression) string { return v.Rhs }).(pulumi.StringOutput)
}

type V2BasicExpressionArrayOutput struct{ *pulumi.OutputState }

func (V2BasicExpressionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]V2BasicExpression)(nil)).Elem()
}

func (o V2BasicExpressionArrayOutput) ToV2BasicExpressionArrayOutput() V2BasicExpressionArrayOutput {
	return o
}

func (o V2BasicExpressionArrayOutput) ToV2BasicExpressionArrayOutputWithContext(ctx context.Context) V2BasicExpressionArrayOutput {
	return o
}

func (o V2BasicExpressionArrayOutput) Index(i pulumi.IntInput) V2BasicExpressionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) V2BasicExpression {
		return vs[0].([]V2BasicExpression)[vs[1].(int)]
	}).(V2BasicExpressionOutput)
}

type V2Timeslot struct {
	// Use this field to specify the custom time slots for which this rule should be applied. This field is only applicable when the repetition field is set to custom.
	Customs []V2TimeslotCustom `pulumi:"customs"`
	// Defines the end date of the time slot
	EndTime string `pulumi:"endTime"`
	// Defines whether the time slot ends or not
	EndsNever *bool `pulumi:"endsNever"`
	// Defines the end date of the repetition
	EndsOn string `pulumi:"endsOn"`
	// Defines if the time slot is an all day slot
	IsAllday *bool `pulumi:"isAllday"`
	// Defines whether repetition is custom or not
	IsCustom *bool `pulumi:"isCustom"`
	// Defines the repetition of the time slot
	Repetition string `pulumi:"repetition"`
	// Defines the start date of the time slot
	StartTime string `pulumi:"startTime"`
	// Time zone for the time slot
	TimeZone string `pulumi:"timeZone"`
}

// V2TimeslotInput is an input type that accepts V2TimeslotArgs and V2TimeslotOutput values.
// You can construct a concrete instance of `V2TimeslotInput` via:
//
//	V2TimeslotArgs{...}
type V2TimeslotInput interface {
	pulumi.Input

	ToV2TimeslotOutput() V2TimeslotOutput
	ToV2TimeslotOutputWithContext(context.Context) V2TimeslotOutput
}

type V2TimeslotArgs struct {
	// Use this field to specify the custom time slots for which this rule should be applied. This field is only applicable when the repetition field is set to custom.
	Customs V2TimeslotCustomArrayInput `pulumi:"customs"`
	// Defines the end date of the time slot
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// Defines whether the time slot ends or not
	EndsNever pulumi.BoolPtrInput `pulumi:"endsNever"`
	// Defines the end date of the repetition
	EndsOn pulumi.StringInput `pulumi:"endsOn"`
	// Defines if the time slot is an all day slot
	IsAllday pulumi.BoolPtrInput `pulumi:"isAllday"`
	// Defines whether repetition is custom or not
	IsCustom pulumi.BoolPtrInput `pulumi:"isCustom"`
	// Defines the repetition of the time slot
	Repetition pulumi.StringInput `pulumi:"repetition"`
	// Defines the start date of the time slot
	StartTime pulumi.StringInput `pulumi:"startTime"`
	// Time zone for the time slot
	TimeZone pulumi.StringInput `pulumi:"timeZone"`
}

func (V2TimeslotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*V2Timeslot)(nil)).Elem()
}

func (i V2TimeslotArgs) ToV2TimeslotOutput() V2TimeslotOutput {
	return i.ToV2TimeslotOutputWithContext(context.Background())
}

func (i V2TimeslotArgs) ToV2TimeslotOutputWithContext(ctx context.Context) V2TimeslotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(V2TimeslotOutput)
}

// V2TimeslotArrayInput is an input type that accepts V2TimeslotArray and V2TimeslotArrayOutput values.
// You can construct a concrete instance of `V2TimeslotArrayInput` via:
//
//	V2TimeslotArray{ V2TimeslotArgs{...} }
type V2TimeslotArrayInput interface {
	pulumi.Input

	ToV2TimeslotArrayOutput() V2TimeslotArrayOutput
	ToV2TimeslotArrayOutputWithContext(context.Context) V2TimeslotArrayOutput
}

type V2TimeslotArray []V2TimeslotInput

func (V2TimeslotArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]V2Timeslot)(nil)).Elem()
}

func (i V2TimeslotArray) ToV2TimeslotArrayOutput() V2TimeslotArrayOutput {
	return i.ToV2TimeslotArrayOutputWithContext(context.Background())
}

func (i V2TimeslotArray) ToV2TimeslotArrayOutputWithContext(ctx context.Context) V2TimeslotArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(V2TimeslotArrayOutput)
}

type V2TimeslotOutput struct{ *pulumi.OutputState }

func (V2TimeslotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*V2Timeslot)(nil)).Elem()
}

func (o V2TimeslotOutput) ToV2TimeslotOutput() V2TimeslotOutput {
	return o
}

func (o V2TimeslotOutput) ToV2TimeslotOutputWithContext(ctx context.Context) V2TimeslotOutput {
	return o
}

// Use this field to specify the custom time slots for which this rule should be applied. This field is only applicable when the repetition field is set to custom.
func (o V2TimeslotOutput) Customs() V2TimeslotCustomArrayOutput {
	return o.ApplyT(func(v V2Timeslot) []V2TimeslotCustom { return v.Customs }).(V2TimeslotCustomArrayOutput)
}

// Defines the end date of the time slot
func (o V2TimeslotOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v V2Timeslot) string { return v.EndTime }).(pulumi.StringOutput)
}

// Defines whether the time slot ends or not
func (o V2TimeslotOutput) EndsNever() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v V2Timeslot) *bool { return v.EndsNever }).(pulumi.BoolPtrOutput)
}

// Defines the end date of the repetition
func (o V2TimeslotOutput) EndsOn() pulumi.StringOutput {
	return o.ApplyT(func(v V2Timeslot) string { return v.EndsOn }).(pulumi.StringOutput)
}

// Defines if the time slot is an all day slot
func (o V2TimeslotOutput) IsAllday() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v V2Timeslot) *bool { return v.IsAllday }).(pulumi.BoolPtrOutput)
}

// Defines whether repetition is custom or not
func (o V2TimeslotOutput) IsCustom() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v V2Timeslot) *bool { return v.IsCustom }).(pulumi.BoolPtrOutput)
}

// Defines the repetition of the time slot
func (o V2TimeslotOutput) Repetition() pulumi.StringOutput {
	return o.ApplyT(func(v V2Timeslot) string { return v.Repetition }).(pulumi.StringOutput)
}

// Defines the start date of the time slot
func (o V2TimeslotOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v V2Timeslot) string { return v.StartTime }).(pulumi.StringOutput)
}

// Time zone for the time slot
func (o V2TimeslotOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v V2Timeslot) string { return v.TimeZone }).(pulumi.StringOutput)
}

type V2TimeslotArrayOutput struct{ *pulumi.OutputState }

func (V2TimeslotArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]V2Timeslot)(nil)).Elem()
}

func (o V2TimeslotArrayOutput) ToV2TimeslotArrayOutput() V2TimeslotArrayOutput {
	return o
}

func (o V2TimeslotArrayOutput) ToV2TimeslotArrayOutputWithContext(ctx context.Context) V2TimeslotArrayOutput {
	return o
}

func (o V2TimeslotArrayOutput) Index(i pulumi.IntInput) V2TimeslotOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) V2Timeslot {
		return vs[0].([]V2Timeslot)[vs[1].(int)]
	}).(V2TimeslotOutput)
}

type V2TimeslotCustom struct {
	// Determines how often the rule repeats. Valid values are day, week, month.
	Repeats string `pulumi:"repeats"`
	// Number of times to repeat.
	RepeatsCount *int `pulumi:"repeatsCount"`
	// Repeats on month.
	RepeatsOnMonth *string `pulumi:"repeatsOnMonth"`
	// List of weekdays to repeat on.
	RepeatsOnWeekdays []int `pulumi:"repeatsOnWeekdays"`
}

// V2TimeslotCustomInput is an input type that accepts V2TimeslotCustomArgs and V2TimeslotCustomOutput values.
// You can construct a concrete instance of `V2TimeslotCustomInput` via:
//
//	V2TimeslotCustomArgs{...}
type V2TimeslotCustomInput interface {
	pulumi.Input

	ToV2TimeslotCustomOutput() V2TimeslotCustomOutput
	ToV2TimeslotCustomOutputWithContext(context.Context) V2TimeslotCustomOutput
}

type V2TimeslotCustomArgs struct {
	// Determines how often the rule repeats. Valid values are day, week, month.
	Repeats pulumi.StringInput `pulumi:"repeats"`
	// Number of times to repeat.
	RepeatsCount pulumi.IntPtrInput `pulumi:"repeatsCount"`
	// Repeats on month.
	RepeatsOnMonth pulumi.StringPtrInput `pulumi:"repeatsOnMonth"`
	// List of weekdays to repeat on.
	RepeatsOnWeekdays pulumi.IntArrayInput `pulumi:"repeatsOnWeekdays"`
}

func (V2TimeslotCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*V2TimeslotCustom)(nil)).Elem()
}

func (i V2TimeslotCustomArgs) ToV2TimeslotCustomOutput() V2TimeslotCustomOutput {
	return i.ToV2TimeslotCustomOutputWithContext(context.Background())
}

func (i V2TimeslotCustomArgs) ToV2TimeslotCustomOutputWithContext(ctx context.Context) V2TimeslotCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(V2TimeslotCustomOutput)
}

// V2TimeslotCustomArrayInput is an input type that accepts V2TimeslotCustomArray and V2TimeslotCustomArrayOutput values.
// You can construct a concrete instance of `V2TimeslotCustomArrayInput` via:
//
//	V2TimeslotCustomArray{ V2TimeslotCustomArgs{...} }
type V2TimeslotCustomArrayInput interface {
	pulumi.Input

	ToV2TimeslotCustomArrayOutput() V2TimeslotCustomArrayOutput
	ToV2TimeslotCustomArrayOutputWithContext(context.Context) V2TimeslotCustomArrayOutput
}

type V2TimeslotCustomArray []V2TimeslotCustomInput

func (V2TimeslotCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]V2TimeslotCustom)(nil)).Elem()
}

func (i V2TimeslotCustomArray) ToV2TimeslotCustomArrayOutput() V2TimeslotCustomArrayOutput {
	return i.ToV2TimeslotCustomArrayOutputWithContext(context.Background())
}

func (i V2TimeslotCustomArray) ToV2TimeslotCustomArrayOutputWithContext(ctx context.Context) V2TimeslotCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(V2TimeslotCustomArrayOutput)
}

type V2TimeslotCustomOutput struct{ *pulumi.OutputState }

func (V2TimeslotCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*V2TimeslotCustom)(nil)).Elem()
}

func (o V2TimeslotCustomOutput) ToV2TimeslotCustomOutput() V2TimeslotCustomOutput {
	return o
}

func (o V2TimeslotCustomOutput) ToV2TimeslotCustomOutputWithContext(ctx context.Context) V2TimeslotCustomOutput {
	return o
}

// Determines how often the rule repeats. Valid values are day, week, month.
func (o V2TimeslotCustomOutput) Repeats() pulumi.StringOutput {
	return o.ApplyT(func(v V2TimeslotCustom) string { return v.Repeats }).(pulumi.StringOutput)
}

// Number of times to repeat.
func (o V2TimeslotCustomOutput) RepeatsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v V2TimeslotCustom) *int { return v.RepeatsCount }).(pulumi.IntPtrOutput)
}

// Repeats on month.
func (o V2TimeslotCustomOutput) RepeatsOnMonth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v V2TimeslotCustom) *string { return v.RepeatsOnMonth }).(pulumi.StringPtrOutput)
}

// List of weekdays to repeat on.
func (o V2TimeslotCustomOutput) RepeatsOnWeekdays() pulumi.IntArrayOutput {
	return o.ApplyT(func(v V2TimeslotCustom) []int { return v.RepeatsOnWeekdays }).(pulumi.IntArrayOutput)
}

type V2TimeslotCustomArrayOutput struct{ *pulumi.OutputState }

func (V2TimeslotCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]V2TimeslotCustom)(nil)).Elem()
}

func (o V2TimeslotCustomArrayOutput) ToV2TimeslotCustomArrayOutput() V2TimeslotCustomArrayOutput {
	return o
}

func (o V2TimeslotCustomArrayOutput) ToV2TimeslotCustomArrayOutputWithContext(ctx context.Context) V2TimeslotCustomArrayOutput {
	return o
}

func (o V2TimeslotCustomArrayOutput) Index(i pulumi.IntInput) V2TimeslotCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) V2TimeslotCustom {
		return vs[0].([]V2TimeslotCustom)[vs[1].(int)]
	}).(V2TimeslotCustomOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*V2BasicExpressionInput)(nil)).Elem(), V2BasicExpressionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*V2BasicExpressionArrayInput)(nil)).Elem(), V2BasicExpressionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*V2TimeslotInput)(nil)).Elem(), V2TimeslotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*V2TimeslotArrayInput)(nil)).Elem(), V2TimeslotArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*V2TimeslotCustomInput)(nil)).Elem(), V2TimeslotCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*V2TimeslotCustomArrayInput)(nil)).Elem(), V2TimeslotCustomArray{})
	pulumi.RegisterOutputType(V2BasicExpressionOutput{})
	pulumi.RegisterOutputType(V2BasicExpressionArrayOutput{})
	pulumi.RegisterOutputType(V2TimeslotOutput{})
	pulumi.RegisterOutputType(V2TimeslotArrayOutput{})
	pulumi.RegisterOutputType(V2TimeslotCustomOutput{})
	pulumi.RegisterOutputType(V2TimeslotCustomArrayOutput{})
}
