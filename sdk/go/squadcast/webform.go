// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package squadcast

import (
	"context"
	"reflect"

	"errors"
	"github.com/IrisDande/pulumi-squadcast/sdk/go/squadcast/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// [Squadcast Webforms](https://support.squadcast.com/webforms/webforms) allows organizations to expand their customer support by hosting public Webforms, so their customers can quickly create an alert from outside the Squadcast ecosystem. Not only this, but internal stakeholders can also leverage Webforms for easy alert creation. The name of the Webform must be unique within and across Teams.
//
// ## Import
//
// teamID:webformName
//
// Use 'Get All Teams' API to get the id of the team
//
// ```sh
// $ pulumi import squadcast:index/webform:Webform example_webform "63065e992a5f9a1d5792b6c5:Webform Name"
// ```
type Webform struct {
	pulumi.CustomResourceState

	// Custom domain name (URL).
	CustomDomainName pulumi.StringPtrOutput `pulumi:"customDomainName"`
	// Description of the Webform.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Defines when to send email to the reporter (triggered, acknowledged, resolved).
	EmailOns pulumi.StringArrayOutput `pulumi:"emailOns"`
	// Footer link.
	FooterLink pulumi.StringPtrOutput `pulumi:"footerLink"`
	// Footer text.
	FooterText pulumi.StringPtrOutput `pulumi:"footerText"`
	// Webform header.
	Header pulumi.StringOutput `pulumi:"header"`
	// Input Fields added to Webforms. Added as tags to incident based on selection.
	InputFields WebformInputFieldArrayOutput `pulumi:"inputFields"`
	// Name of the Webform.
	Name pulumi.StringOutput `pulumi:"name"`
	// Form owner.
	Owner WebformOwnerOutput `pulumi:"owner"`
	// Public URL of the Webform.
	PublicUrl pulumi.StringOutput `pulumi:"publicUrl"`
	// Services added to Webform.
	Services WebformServiceArrayOutput `pulumi:"services"`
	// Severity of the incident.
	//
	// Deprecated: Use `inputField` instead of `severity`.
	Severities WebformSeverityArrayOutput `pulumi:"severities"`
	// Webform Tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Team id.
	TeamId pulumi.StringOutput `pulumi:"teamId"`
	// Webform title (public).
	Title pulumi.StringOutput `pulumi:"title"`
}

// NewWebform registers a new resource with the given unique name, arguments, and options.
func NewWebform(ctx *pulumi.Context,
	name string, args *WebformArgs, opts ...pulumi.ResourceOption) (*Webform, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Header == nil {
		return nil, errors.New("invalid value for required argument 'Header'")
	}
	if args.Owner == nil {
		return nil, errors.New("invalid value for required argument 'Owner'")
	}
	if args.Services == nil {
		return nil, errors.New("invalid value for required argument 'Services'")
	}
	if args.TeamId == nil {
		return nil, errors.New("invalid value for required argument 'TeamId'")
	}
	if args.Title == nil {
		return nil, errors.New("invalid value for required argument 'Title'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Webform
	err := ctx.RegisterResource("squadcast:index/webform:Webform", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebform gets an existing Webform resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebform(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebformState, opts ...pulumi.ResourceOption) (*Webform, error) {
	var resource Webform
	err := ctx.ReadResource("squadcast:index/webform:Webform", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Webform resources.
type webformState struct {
	// Custom domain name (URL).
	CustomDomainName *string `pulumi:"customDomainName"`
	// Description of the Webform.
	Description *string `pulumi:"description"`
	// Defines when to send email to the reporter (triggered, acknowledged, resolved).
	EmailOns []string `pulumi:"emailOns"`
	// Footer link.
	FooterLink *string `pulumi:"footerLink"`
	// Footer text.
	FooterText *string `pulumi:"footerText"`
	// Webform header.
	Header *string `pulumi:"header"`
	// Input Fields added to Webforms. Added as tags to incident based on selection.
	InputFields []WebformInputField `pulumi:"inputFields"`
	// Name of the Webform.
	Name *string `pulumi:"name"`
	// Form owner.
	Owner *WebformOwner `pulumi:"owner"`
	// Public URL of the Webform.
	PublicUrl *string `pulumi:"publicUrl"`
	// Services added to Webform.
	Services []WebformService `pulumi:"services"`
	// Severity of the incident.
	//
	// Deprecated: Use `inputField` instead of `severity`.
	Severities []WebformSeverity `pulumi:"severities"`
	// Webform Tags.
	Tags map[string]string `pulumi:"tags"`
	// Team id.
	TeamId *string `pulumi:"teamId"`
	// Webform title (public).
	Title *string `pulumi:"title"`
}

type WebformState struct {
	// Custom domain name (URL).
	CustomDomainName pulumi.StringPtrInput
	// Description of the Webform.
	Description pulumi.StringPtrInput
	// Defines when to send email to the reporter (triggered, acknowledged, resolved).
	EmailOns pulumi.StringArrayInput
	// Footer link.
	FooterLink pulumi.StringPtrInput
	// Footer text.
	FooterText pulumi.StringPtrInput
	// Webform header.
	Header pulumi.StringPtrInput
	// Input Fields added to Webforms. Added as tags to incident based on selection.
	InputFields WebformInputFieldArrayInput
	// Name of the Webform.
	Name pulumi.StringPtrInput
	// Form owner.
	Owner WebformOwnerPtrInput
	// Public URL of the Webform.
	PublicUrl pulumi.StringPtrInput
	// Services added to Webform.
	Services WebformServiceArrayInput
	// Severity of the incident.
	//
	// Deprecated: Use `inputField` instead of `severity`.
	Severities WebformSeverityArrayInput
	// Webform Tags.
	Tags pulumi.StringMapInput
	// Team id.
	TeamId pulumi.StringPtrInput
	// Webform title (public).
	Title pulumi.StringPtrInput
}

func (WebformState) ElementType() reflect.Type {
	return reflect.TypeOf((*webformState)(nil)).Elem()
}

type webformArgs struct {
	// Custom domain name (URL).
	CustomDomainName *string `pulumi:"customDomainName"`
	// Description of the Webform.
	Description *string `pulumi:"description"`
	// Defines when to send email to the reporter (triggered, acknowledged, resolved).
	EmailOns []string `pulumi:"emailOns"`
	// Footer link.
	FooterLink *string `pulumi:"footerLink"`
	// Footer text.
	FooterText *string `pulumi:"footerText"`
	// Webform header.
	Header string `pulumi:"header"`
	// Input Fields added to Webforms. Added as tags to incident based on selection.
	InputFields []WebformInputField `pulumi:"inputFields"`
	// Name of the Webform.
	Name *string `pulumi:"name"`
	// Form owner.
	Owner WebformOwner `pulumi:"owner"`
	// Services added to Webform.
	Services []WebformService `pulumi:"services"`
	// Severity of the incident.
	//
	// Deprecated: Use `inputField` instead of `severity`.
	Severities []WebformSeverity `pulumi:"severities"`
	// Webform Tags.
	Tags map[string]string `pulumi:"tags"`
	// Team id.
	TeamId string `pulumi:"teamId"`
	// Webform title (public).
	Title string `pulumi:"title"`
}

// The set of arguments for constructing a Webform resource.
type WebformArgs struct {
	// Custom domain name (URL).
	CustomDomainName pulumi.StringPtrInput
	// Description of the Webform.
	Description pulumi.StringPtrInput
	// Defines when to send email to the reporter (triggered, acknowledged, resolved).
	EmailOns pulumi.StringArrayInput
	// Footer link.
	FooterLink pulumi.StringPtrInput
	// Footer text.
	FooterText pulumi.StringPtrInput
	// Webform header.
	Header pulumi.StringInput
	// Input Fields added to Webforms. Added as tags to incident based on selection.
	InputFields WebformInputFieldArrayInput
	// Name of the Webform.
	Name pulumi.StringPtrInput
	// Form owner.
	Owner WebformOwnerInput
	// Services added to Webform.
	Services WebformServiceArrayInput
	// Severity of the incident.
	//
	// Deprecated: Use `inputField` instead of `severity`.
	Severities WebformSeverityArrayInput
	// Webform Tags.
	Tags pulumi.StringMapInput
	// Team id.
	TeamId pulumi.StringInput
	// Webform title (public).
	Title pulumi.StringInput
}

func (WebformArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webformArgs)(nil)).Elem()
}

type WebformInput interface {
	pulumi.Input

	ToWebformOutput() WebformOutput
	ToWebformOutputWithContext(ctx context.Context) WebformOutput
}

func (*Webform) ElementType() reflect.Type {
	return reflect.TypeOf((**Webform)(nil)).Elem()
}

func (i *Webform) ToWebformOutput() WebformOutput {
	return i.ToWebformOutputWithContext(context.Background())
}

func (i *Webform) ToWebformOutputWithContext(ctx context.Context) WebformOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebformOutput)
}

// WebformArrayInput is an input type that accepts WebformArray and WebformArrayOutput values.
// You can construct a concrete instance of `WebformArrayInput` via:
//
//	WebformArray{ WebformArgs{...} }
type WebformArrayInput interface {
	pulumi.Input

	ToWebformArrayOutput() WebformArrayOutput
	ToWebformArrayOutputWithContext(context.Context) WebformArrayOutput
}

type WebformArray []WebformInput

func (WebformArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Webform)(nil)).Elem()
}

func (i WebformArray) ToWebformArrayOutput() WebformArrayOutput {
	return i.ToWebformArrayOutputWithContext(context.Background())
}

func (i WebformArray) ToWebformArrayOutputWithContext(ctx context.Context) WebformArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebformArrayOutput)
}

// WebformMapInput is an input type that accepts WebformMap and WebformMapOutput values.
// You can construct a concrete instance of `WebformMapInput` via:
//
//	WebformMap{ "key": WebformArgs{...} }
type WebformMapInput interface {
	pulumi.Input

	ToWebformMapOutput() WebformMapOutput
	ToWebformMapOutputWithContext(context.Context) WebformMapOutput
}

type WebformMap map[string]WebformInput

func (WebformMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Webform)(nil)).Elem()
}

func (i WebformMap) ToWebformMapOutput() WebformMapOutput {
	return i.ToWebformMapOutputWithContext(context.Background())
}

func (i WebformMap) ToWebformMapOutputWithContext(ctx context.Context) WebformMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebformMapOutput)
}

type WebformOutput struct{ *pulumi.OutputState }

func (WebformOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Webform)(nil)).Elem()
}

func (o WebformOutput) ToWebformOutput() WebformOutput {
	return o
}

func (o WebformOutput) ToWebformOutputWithContext(ctx context.Context) WebformOutput {
	return o
}

// Custom domain name (URL).
func (o WebformOutput) CustomDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Webform) pulumi.StringPtrOutput { return v.CustomDomainName }).(pulumi.StringPtrOutput)
}

// Description of the Webform.
func (o WebformOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Webform) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Defines when to send email to the reporter (triggered, acknowledged, resolved).
func (o WebformOutput) EmailOns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Webform) pulumi.StringArrayOutput { return v.EmailOns }).(pulumi.StringArrayOutput)
}

// Footer link.
func (o WebformOutput) FooterLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Webform) pulumi.StringPtrOutput { return v.FooterLink }).(pulumi.StringPtrOutput)
}

// Footer text.
func (o WebformOutput) FooterText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Webform) pulumi.StringPtrOutput { return v.FooterText }).(pulumi.StringPtrOutput)
}

// Webform header.
func (o WebformOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v *Webform) pulumi.StringOutput { return v.Header }).(pulumi.StringOutput)
}

// Input Fields added to Webforms. Added as tags to incident based on selection.
func (o WebformOutput) InputFields() WebformInputFieldArrayOutput {
	return o.ApplyT(func(v *Webform) WebformInputFieldArrayOutput { return v.InputFields }).(WebformInputFieldArrayOutput)
}

// Name of the Webform.
func (o WebformOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Webform) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Form owner.
func (o WebformOutput) Owner() WebformOwnerOutput {
	return o.ApplyT(func(v *Webform) WebformOwnerOutput { return v.Owner }).(WebformOwnerOutput)
}

// Public URL of the Webform.
func (o WebformOutput) PublicUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *Webform) pulumi.StringOutput { return v.PublicUrl }).(pulumi.StringOutput)
}

// Services added to Webform.
func (o WebformOutput) Services() WebformServiceArrayOutput {
	return o.ApplyT(func(v *Webform) WebformServiceArrayOutput { return v.Services }).(WebformServiceArrayOutput)
}

// Severity of the incident.
//
// Deprecated: Use `inputField` instead of `severity`.
func (o WebformOutput) Severities() WebformSeverityArrayOutput {
	return o.ApplyT(func(v *Webform) WebformSeverityArrayOutput { return v.Severities }).(WebformSeverityArrayOutput)
}

// Webform Tags.
func (o WebformOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Webform) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Team id.
func (o WebformOutput) TeamId() pulumi.StringOutput {
	return o.ApplyT(func(v *Webform) pulumi.StringOutput { return v.TeamId }).(pulumi.StringOutput)
}

// Webform title (public).
func (o WebformOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v *Webform) pulumi.StringOutput { return v.Title }).(pulumi.StringOutput)
}

type WebformArrayOutput struct{ *pulumi.OutputState }

func (WebformArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Webform)(nil)).Elem()
}

func (o WebformArrayOutput) ToWebformArrayOutput() WebformArrayOutput {
	return o
}

func (o WebformArrayOutput) ToWebformArrayOutputWithContext(ctx context.Context) WebformArrayOutput {
	return o
}

func (o WebformArrayOutput) Index(i pulumi.IntInput) WebformOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Webform {
		return vs[0].([]*Webform)[vs[1].(int)]
	}).(WebformOutput)
}

type WebformMapOutput struct{ *pulumi.OutputState }

func (WebformMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Webform)(nil)).Elem()
}

func (o WebformMapOutput) ToWebformMapOutput() WebformMapOutput {
	return o
}

func (o WebformMapOutput) ToWebformMapOutputWithContext(ctx context.Context) WebformMapOutput {
	return o
}

func (o WebformMapOutput) MapIndex(k pulumi.StringInput) WebformOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Webform {
		return vs[0].(map[string]*Webform)[vs[1].(string)]
	}).(WebformOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WebformInput)(nil)).Elem(), &Webform{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebformArrayInput)(nil)).Elem(), WebformArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebformMapInput)(nil)).Elem(), WebformMap{})
	pulumi.RegisterOutputType(WebformOutput{})
	pulumi.RegisterOutputType(WebformArrayOutput{})
	pulumi.RegisterOutputType(WebformMapOutput{})
}
