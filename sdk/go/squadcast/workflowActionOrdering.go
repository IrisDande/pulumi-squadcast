// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package squadcast

import (
	"context"
	"reflect"

	"errors"
	"github.com/IrisDande/pulumi-squadcast/sdk/go/squadcast/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
type WorkflowActionOrdering struct {
	pulumi.CustomResourceState

	// The order of actions in the workflow
	ActionOrders pulumi.IntArrayOutput `pulumi:"actionOrders"`
	// The ID of the workflow
	WorkflowId pulumi.StringOutput `pulumi:"workflowId"`
}

// NewWorkflowActionOrdering registers a new resource with the given unique name, arguments, and options.
func NewWorkflowActionOrdering(ctx *pulumi.Context,
	name string, args *WorkflowActionOrderingArgs, opts ...pulumi.ResourceOption) (*WorkflowActionOrdering, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ActionOrders == nil {
		return nil, errors.New("invalid value for required argument 'ActionOrders'")
	}
	if args.WorkflowId == nil {
		return nil, errors.New("invalid value for required argument 'WorkflowId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkflowActionOrdering
	err := ctx.RegisterResource("squadcast:index/workflowActionOrdering:WorkflowActionOrdering", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkflowActionOrdering gets an existing WorkflowActionOrdering resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkflowActionOrdering(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkflowActionOrderingState, opts ...pulumi.ResourceOption) (*WorkflowActionOrdering, error) {
	var resource WorkflowActionOrdering
	err := ctx.ReadResource("squadcast:index/workflowActionOrdering:WorkflowActionOrdering", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkflowActionOrdering resources.
type workflowActionOrderingState struct {
	// The order of actions in the workflow
	ActionOrders []int `pulumi:"actionOrders"`
	// The ID of the workflow
	WorkflowId *string `pulumi:"workflowId"`
}

type WorkflowActionOrderingState struct {
	// The order of actions in the workflow
	ActionOrders pulumi.IntArrayInput
	// The ID of the workflow
	WorkflowId pulumi.StringPtrInput
}

func (WorkflowActionOrderingState) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowActionOrderingState)(nil)).Elem()
}

type workflowActionOrderingArgs struct {
	// The order of actions in the workflow
	ActionOrders []int `pulumi:"actionOrders"`
	// The ID of the workflow
	WorkflowId string `pulumi:"workflowId"`
}

// The set of arguments for constructing a WorkflowActionOrdering resource.
type WorkflowActionOrderingArgs struct {
	// The order of actions in the workflow
	ActionOrders pulumi.IntArrayInput
	// The ID of the workflow
	WorkflowId pulumi.StringInput
}

func (WorkflowActionOrderingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowActionOrderingArgs)(nil)).Elem()
}

type WorkflowActionOrderingInput interface {
	pulumi.Input

	ToWorkflowActionOrderingOutput() WorkflowActionOrderingOutput
	ToWorkflowActionOrderingOutputWithContext(ctx context.Context) WorkflowActionOrderingOutput
}

func (*WorkflowActionOrdering) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowActionOrdering)(nil)).Elem()
}

func (i *WorkflowActionOrdering) ToWorkflowActionOrderingOutput() WorkflowActionOrderingOutput {
	return i.ToWorkflowActionOrderingOutputWithContext(context.Background())
}

func (i *WorkflowActionOrdering) ToWorkflowActionOrderingOutputWithContext(ctx context.Context) WorkflowActionOrderingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowActionOrderingOutput)
}

// WorkflowActionOrderingArrayInput is an input type that accepts WorkflowActionOrderingArray and WorkflowActionOrderingArrayOutput values.
// You can construct a concrete instance of `WorkflowActionOrderingArrayInput` via:
//
//	WorkflowActionOrderingArray{ WorkflowActionOrderingArgs{...} }
type WorkflowActionOrderingArrayInput interface {
	pulumi.Input

	ToWorkflowActionOrderingArrayOutput() WorkflowActionOrderingArrayOutput
	ToWorkflowActionOrderingArrayOutputWithContext(context.Context) WorkflowActionOrderingArrayOutput
}

type WorkflowActionOrderingArray []WorkflowActionOrderingInput

func (WorkflowActionOrderingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowActionOrdering)(nil)).Elem()
}

func (i WorkflowActionOrderingArray) ToWorkflowActionOrderingArrayOutput() WorkflowActionOrderingArrayOutput {
	return i.ToWorkflowActionOrderingArrayOutputWithContext(context.Background())
}

func (i WorkflowActionOrderingArray) ToWorkflowActionOrderingArrayOutputWithContext(ctx context.Context) WorkflowActionOrderingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowActionOrderingArrayOutput)
}

// WorkflowActionOrderingMapInput is an input type that accepts WorkflowActionOrderingMap and WorkflowActionOrderingMapOutput values.
// You can construct a concrete instance of `WorkflowActionOrderingMapInput` via:
//
//	WorkflowActionOrderingMap{ "key": WorkflowActionOrderingArgs{...} }
type WorkflowActionOrderingMapInput interface {
	pulumi.Input

	ToWorkflowActionOrderingMapOutput() WorkflowActionOrderingMapOutput
	ToWorkflowActionOrderingMapOutputWithContext(context.Context) WorkflowActionOrderingMapOutput
}

type WorkflowActionOrderingMap map[string]WorkflowActionOrderingInput

func (WorkflowActionOrderingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowActionOrdering)(nil)).Elem()
}

func (i WorkflowActionOrderingMap) ToWorkflowActionOrderingMapOutput() WorkflowActionOrderingMapOutput {
	return i.ToWorkflowActionOrderingMapOutputWithContext(context.Background())
}

func (i WorkflowActionOrderingMap) ToWorkflowActionOrderingMapOutputWithContext(ctx context.Context) WorkflowActionOrderingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowActionOrderingMapOutput)
}

type WorkflowActionOrderingOutput struct{ *pulumi.OutputState }

func (WorkflowActionOrderingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowActionOrdering)(nil)).Elem()
}

func (o WorkflowActionOrderingOutput) ToWorkflowActionOrderingOutput() WorkflowActionOrderingOutput {
	return o
}

func (o WorkflowActionOrderingOutput) ToWorkflowActionOrderingOutputWithContext(ctx context.Context) WorkflowActionOrderingOutput {
	return o
}

// The order of actions in the workflow
func (o WorkflowActionOrderingOutput) ActionOrders() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *WorkflowActionOrdering) pulumi.IntArrayOutput { return v.ActionOrders }).(pulumi.IntArrayOutput)
}

// The ID of the workflow
func (o WorkflowActionOrderingOutput) WorkflowId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowActionOrdering) pulumi.StringOutput { return v.WorkflowId }).(pulumi.StringOutput)
}

type WorkflowActionOrderingArrayOutput struct{ *pulumi.OutputState }

func (WorkflowActionOrderingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkflowActionOrdering)(nil)).Elem()
}

func (o WorkflowActionOrderingArrayOutput) ToWorkflowActionOrderingArrayOutput() WorkflowActionOrderingArrayOutput {
	return o
}

func (o WorkflowActionOrderingArrayOutput) ToWorkflowActionOrderingArrayOutputWithContext(ctx context.Context) WorkflowActionOrderingArrayOutput {
	return o
}

func (o WorkflowActionOrderingArrayOutput) Index(i pulumi.IntInput) WorkflowActionOrderingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkflowActionOrdering {
		return vs[0].([]*WorkflowActionOrdering)[vs[1].(int)]
	}).(WorkflowActionOrderingOutput)
}

type WorkflowActionOrderingMapOutput struct{ *pulumi.OutputState }

func (WorkflowActionOrderingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkflowActionOrdering)(nil)).Elem()
}

func (o WorkflowActionOrderingMapOutput) ToWorkflowActionOrderingMapOutput() WorkflowActionOrderingMapOutput {
	return o
}

func (o WorkflowActionOrderingMapOutput) ToWorkflowActionOrderingMapOutputWithContext(ctx context.Context) WorkflowActionOrderingMapOutput {
	return o
}

func (o WorkflowActionOrderingMapOutput) MapIndex(k pulumi.StringInput) WorkflowActionOrderingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkflowActionOrdering {
		return vs[0].(map[string]*WorkflowActionOrdering)[vs[1].(string)]
	}).(WorkflowActionOrderingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowActionOrderingInput)(nil)).Elem(), &WorkflowActionOrdering{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowActionOrderingArrayInput)(nil)).Elem(), WorkflowActionOrderingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowActionOrderingMapInput)(nil)).Elem(), WorkflowActionOrderingMap{})
	pulumi.RegisterOutputType(WorkflowActionOrderingOutput{})
	pulumi.RegisterOutputType(WorkflowActionOrderingArrayOutput{})
	pulumi.RegisterOutputType(WorkflowActionOrderingMapOutput{})
}
