// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Status page component defines a component that represents a specific element within a status page. This resource enables you to configure various attributes of the component, and optionally associate it with a group on the status page.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as squadcast from "@irisdanded/pulumi-squadcast";
 * import * as squadcast from "@pulumi/squadcast";
 *
 * const team = squadcast.getTeam({
 *     name: "Default Team",
 * });
 * const user = squadcast.getUser({
 *     email: "john@example.com",
 * });
 * const testStatusPage = new squadcast.StatusPage("testStatusPage", {
 *     teamId: team.then(team => team.id),
 *     description: "Status Page description",
 *     isPublic: true,
 *     domainName: "test-statuspage",
 *     timezone: "Asia/Kolkata",
 *     contactEmail: "example@test.com",
 *     themeColor: {
 *         primary: "#000000",
 *         secondary: "#dddddd",
 *     },
 *     owner: {
 *         type: "user",
 *         id: user.then(user => user.id),
 *     },
 * });
 * const exampleGroup = new squadcast.StatusPageGroup("exampleGroup", {statusPageId: testStatusPage.id});
 * const exampleComponent = new squadcast.StatusPageComponent("exampleComponent", {
 *     statusPageId: testStatusPage.id,
 *     description: "Component 1 description",
 *     groupId: exampleGroup.id,
 * });
 * ```
 *
 * ## Import
 *
 * statusPageID:componentID
 *
 * ```sh
 * $ pulumi import squadcast:index/statusPageComponent:StatusPageComponent test_component 300:573
 * ```
 */
export class StatusPageComponent extends pulumi.CustomResource {
    /**
     * Get an existing StatusPageComponent resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StatusPageComponentState, opts?: pulumi.CustomResourceOptions): StatusPageComponent {
        return new StatusPageComponent(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'squadcast:index/statusPageComponent:StatusPageComponent';

    /**
     * Returns true if the given object is an instance of StatusPageComponent.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is StatusPageComponent {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === StatusPageComponent.__pulumiType;
    }

    /**
     * Description of the status page component.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Id of the group to which this component belongs to.
     */
    public readonly groupId!: pulumi.Output<string | undefined>;
    /**
     * Name of the status page component.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Id of the status page to which this component belongs to.
     */
    public readonly statusPageId!: pulumi.Output<string>;

    /**
     * Create a StatusPageComponent resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StatusPageComponentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: StatusPageComponentArgs | StatusPageComponentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as StatusPageComponentState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["groupId"] = state ? state.groupId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["statusPageId"] = state ? state.statusPageId : undefined;
        } else {
            const args = argsOrState as StatusPageComponentArgs | undefined;
            if ((!args || args.statusPageId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'statusPageId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["groupId"] = args ? args.groupId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["statusPageId"] = args ? args.statusPageId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(StatusPageComponent.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering StatusPageComponent resources.
 */
export interface StatusPageComponentState {
    /**
     * Description of the status page component.
     */
    description?: pulumi.Input<string>;
    /**
     * Id of the group to which this component belongs to.
     */
    groupId?: pulumi.Input<string>;
    /**
     * Name of the status page component.
     */
    name?: pulumi.Input<string>;
    /**
     * Id of the status page to which this component belongs to.
     */
    statusPageId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a StatusPageComponent resource.
 */
export interface StatusPageComponentArgs {
    /**
     * Description of the status page component.
     */
    description?: pulumi.Input<string>;
    /**
     * Id of the group to which this component belongs to.
     */
    groupId?: pulumi.Input<string>;
    /**
     * Name of the status page component.
     */
    name?: pulumi.Input<string>;
    /**
     * Id of the status page to which this component belongs to.
     */
    statusPageId: pulumi.Input<string>;
}
