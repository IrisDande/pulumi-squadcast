# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from . import _utilities
import typing
# Export this package's modules as members:
from .ger import *
from .get_runbook import *
from .get_schedule import *
from .get_service import *
from .get_squad import *
from .get_team import *
from .get_user import *
from .get_webform import *
from .provider import *
from .runbook import *
from .schedule import *
from .service import *
from .slo import *
from .squad import *
from .team import *
from .user import *
from .webform import *
from .workflow import *
from ._inputs import *
from . import outputs

# Make subpackages available:
if typing.TYPE_CHECKING:
    import irisdadded_squadcast_pulumi.config as __config
    config = __config
    import irisdadded_squadcast_pulumi.deduplication as __deduplication
    deduplication = __deduplication
    import irisdadded_squadcast_pulumi.escalation as __escalation
    escalation = __escalation
    import irisdadded_squadcast_pulumi.ger as __ger
    ger = __ger
    import irisdadded_squadcast_pulumi.routing as __routing
    routing = __routing
    import irisdadded_squadcast_pulumi.schedule as __schedule
    schedule = __schedule
    import irisdadded_squadcast_pulumi.service as __service
    service = __service
    import irisdadded_squadcast_pulumi.status as __status
    status = __status
    import irisdadded_squadcast_pulumi.suppression as __suppression
    suppression = __suppression
    import irisdadded_squadcast_pulumi.tagging as __tagging
    tagging = __tagging
    import irisdadded_squadcast_pulumi.team as __team
    team = __team
    import irisdadded_squadcast_pulumi.workflow as __workflow
    workflow = __workflow
else:
    config = _utilities.lazy_import('irisdadded_squadcast_pulumi.config')
    deduplication = _utilities.lazy_import('irisdadded_squadcast_pulumi.deduplication')
    escalation = _utilities.lazy_import('irisdadded_squadcast_pulumi.escalation')
    ger = _utilities.lazy_import('irisdadded_squadcast_pulumi.ger')
    routing = _utilities.lazy_import('irisdadded_squadcast_pulumi.routing')
    schedule = _utilities.lazy_import('irisdadded_squadcast_pulumi.schedule')
    service = _utilities.lazy_import('irisdadded_squadcast_pulumi.service')
    status = _utilities.lazy_import('irisdadded_squadcast_pulumi.status')
    suppression = _utilities.lazy_import('irisdadded_squadcast_pulumi.suppression')
    tagging = _utilities.lazy_import('irisdadded_squadcast_pulumi.tagging')
    team = _utilities.lazy_import('irisdadded_squadcast_pulumi.team')
    workflow = _utilities.lazy_import('irisdadded_squadcast_pulumi.workflow')

_utilities.register(
    resource_modules="""
[
 {
  "pkg": "squadcast",
  "mod": "deduplication/rule/v2",
  "fqn": "irisdadded_squadcast_pulumi.deduplication.rule",
  "classes": {
   "squadcast:deduplication/rule/v2:V2": "V2"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "deduplication/rules",
  "fqn": "irisdadded_squadcast_pulumi.deduplication",
  "classes": {
   "squadcast:deduplication/rules:Rules": "Rules"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "escalation/policy",
  "fqn": "irisdadded_squadcast_pulumi.escalation",
  "classes": {
   "squadcast:escalation/policy:Policy": "Policy"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "ger/ruleset",
  "fqn": "irisdadded_squadcast_pulumi.ger",
  "classes": {
   "squadcast:ger/ruleset:Ruleset": "Ruleset"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "ger/ruleset/rule",
  "fqn": "irisdadded_squadcast_pulumi.ger.ruleset",
  "classes": {
   "squadcast:ger/ruleset/rule:Rule": "Rule"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "ger/ruleset/rules/ordering",
  "fqn": "irisdadded_squadcast_pulumi.ger.ruleset.rules",
  "classes": {
   "squadcast:ger/ruleset/rules/ordering:Ordering": "Ordering"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "index/ger",
  "fqn": "irisdadded_squadcast_pulumi",
  "classes": {
   "squadcast:index/ger:Ger": "Ger"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "index/runbook",
  "fqn": "irisdadded_squadcast_pulumi",
  "classes": {
   "squadcast:index/runbook:Runbook": "Runbook"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "index/schedule",
  "fqn": "irisdadded_squadcast_pulumi",
  "classes": {
   "squadcast:index/schedule:Schedule": "Schedule"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "index/service",
  "fqn": "irisdadded_squadcast_pulumi",
  "classes": {
   "squadcast:index/service:Service": "Service"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "index/slo",
  "fqn": "irisdadded_squadcast_pulumi",
  "classes": {
   "squadcast:index/slo:Slo": "Slo"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "index/squad",
  "fqn": "irisdadded_squadcast_pulumi",
  "classes": {
   "squadcast:index/squad:Squad": "Squad"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "index/team",
  "fqn": "irisdadded_squadcast_pulumi",
  "classes": {
   "squadcast:index/team:Team": "Team"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "index/user",
  "fqn": "irisdadded_squadcast_pulumi",
  "classes": {
   "squadcast:index/user:User": "User"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "index/webform",
  "fqn": "irisdadded_squadcast_pulumi",
  "classes": {
   "squadcast:index/webform:Webform": "Webform"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "index/workflow",
  "fqn": "irisdadded_squadcast_pulumi",
  "classes": {
   "squadcast:index/workflow:Workflow": "Workflow"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "routing/rule/v2",
  "fqn": "irisdadded_squadcast_pulumi.routing.rule",
  "classes": {
   "squadcast:routing/rule/v2:V2": "V2"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "routing/rules",
  "fqn": "irisdadded_squadcast_pulumi.routing",
  "classes": {
   "squadcast:routing/rules:Rules": "Rules"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "schedule/rotation/v2",
  "fqn": "irisdadded_squadcast_pulumi.schedule.rotation",
  "classes": {
   "squadcast:schedule/rotation/v2:V2": "V2"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "schedule/v2",
  "fqn": "irisdadded_squadcast_pulumi.schedule",
  "classes": {
   "squadcast:schedule/v2:V2": "V2"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "service/maintenance",
  "fqn": "irisdadded_squadcast_pulumi.service",
  "classes": {
   "squadcast:service/maintenance:Maintenance": "Maintenance"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "status/page",
  "fqn": "irisdadded_squadcast_pulumi.status",
  "classes": {
   "squadcast:status/page:Page": "Page"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "status/page/component",
  "fqn": "irisdadded_squadcast_pulumi.status.page",
  "classes": {
   "squadcast:status/page/component:Component": "Component"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "status/page/group",
  "fqn": "irisdadded_squadcast_pulumi.status.page",
  "classes": {
   "squadcast:status/page/group:Group": "Group"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "suppression/rule/v2",
  "fqn": "irisdadded_squadcast_pulumi.suppression.rule",
  "classes": {
   "squadcast:suppression/rule/v2:V2": "V2"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "suppression/rules",
  "fqn": "irisdadded_squadcast_pulumi.suppression",
  "classes": {
   "squadcast:suppression/rules:Rules": "Rules"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "tagging/rule/v2",
  "fqn": "irisdadded_squadcast_pulumi.tagging.rule",
  "classes": {
   "squadcast:tagging/rule/v2:V2": "V2"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "tagging/rules",
  "fqn": "irisdadded_squadcast_pulumi.tagging",
  "classes": {
   "squadcast:tagging/rules:Rules": "Rules"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "team/member",
  "fqn": "irisdadded_squadcast_pulumi.team",
  "classes": {
   "squadcast:team/member:Member": "Member"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "team/role",
  "fqn": "irisdadded_squadcast_pulumi.team",
  "classes": {
   "squadcast:team/role:Role": "Role"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "workflow/action",
  "fqn": "irisdadded_squadcast_pulumi.workflow",
  "classes": {
   "squadcast:workflow/action:Action": "Action"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "workflow/action/ordering",
  "fqn": "irisdadded_squadcast_pulumi.workflow.action",
  "classes": {
   "squadcast:workflow/action/ordering:Ordering": "Ordering"
  }
 }
]
""",
    resource_packages="""
[
 {
  "pkg": "squadcast",
  "token": "pulumi:providers:squadcast",
  "fqn": "irisdadded_squadcast_pulumi",
  "class": "Provider"
 }
]
"""
)
