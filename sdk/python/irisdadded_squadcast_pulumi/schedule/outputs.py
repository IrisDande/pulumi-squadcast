# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'V2EntityOwner',
    'V2Tag',
    'GetV2EntityOwnerResult',
    'GetV2TagResult',
]

@pulumi.output_type
class V2EntityOwner(dict):
    def __init__(__self__, *,
                 id: str,
                 type: str):
        """
        :param str id: Schedule owner id.
        :param str type: Schedule owner type. Supported values are 'user' or 'squad'.
        """
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        Schedule owner id.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        Schedule owner type. Supported values are 'user' or 'squad'.
        """
        return pulumi.get(self, "type")


@pulumi.output_type
class V2Tag(dict):
    def __init__(__self__, *,
                 key: str,
                 value: str,
                 color: Optional[str] = None):
        """
        :param str key: Schedule tag key.
        :param str value: Schedule tag value.
        :param str color: Schedule tag color.
        """
        pulumi.set(__self__, "key", key)
        pulumi.set(__self__, "value", value)
        if color is not None:
            pulumi.set(__self__, "color", color)

    @property
    @pulumi.getter
    def key(self) -> str:
        """
        Schedule tag key.
        """
        return pulumi.get(self, "key")

    @property
    @pulumi.getter
    def value(self) -> str:
        """
        Schedule tag value.
        """
        return pulumi.get(self, "value")

    @property
    @pulumi.getter
    def color(self) -> Optional[str]:
        """
        Schedule tag color.
        """
        return pulumi.get(self, "color")


@pulumi.output_type
class GetV2EntityOwnerResult(dict):
    def __init__(__self__, *,
                 id: str,
                 type: str):
        """
        :param str id: Schedule owner id.
        :param str type: Schedule owner type (user, team, squad).
        """
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        Schedule owner id.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        Schedule owner type (user, team, squad).
        """
        return pulumi.get(self, "type")


@pulumi.output_type
class GetV2TagResult(dict):
    def __init__(__self__, *,
                 color: str,
                 key: str,
                 value: str):
        """
        :param str color: Schedule tag color.
        :param str key: Schedule tag key.
        :param str value: Schedule tag value.
        """
        pulumi.set(__self__, "color", color)
        pulumi.set(__self__, "key", key)
        pulumi.set(__self__, "value", value)

    @property
    @pulumi.getter
    def color(self) -> str:
        """
        Schedule tag color.
        """
        return pulumi.get(self, "color")

    @property
    @pulumi.getter
    def key(self) -> str:
        """
        Schedule tag key.
        """
        return pulumi.get(self, "key")

    @property
    @pulumi.getter
    def value(self) -> str:
        """
        Schedule tag value.
        """
        return pulumi.get(self, "value")


