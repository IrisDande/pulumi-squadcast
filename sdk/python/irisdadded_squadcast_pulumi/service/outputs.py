# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'MaintenanceWindow',
]

@pulumi.output_type
class MaintenanceWindow(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "from":
            suggest = "from_"
        elif key == "repeatFrequency":
            suggest = "repeat_frequency"
        elif key == "repeatTill":
            suggest = "repeat_till"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in MaintenanceWindow. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        MaintenanceWindow.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        MaintenanceWindow.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 from_: str,
                 till: str,
                 repeat_frequency: Optional[str] = None,
                 repeat_till: Optional[str] = None):
        """
        :param str from_: Starting Time
        :param str till: End Time.
        :param str repeat_frequency: repeat frequency. ('day', 'week', '2 weeks', '3 weeks', 'month')
        :param str repeat_till: Till when you want to repeat this Maintenance mode
        """
        pulumi.set(__self__, "from_", from_)
        pulumi.set(__self__, "till", till)
        if repeat_frequency is not None:
            pulumi.set(__self__, "repeat_frequency", repeat_frequency)
        if repeat_till is not None:
            pulumi.set(__self__, "repeat_till", repeat_till)

    @property
    @pulumi.getter(name="from")
    def from_(self) -> str:
        """
        Starting Time
        """
        return pulumi.get(self, "from_")

    @property
    @pulumi.getter
    def till(self) -> str:
        """
        End Time.
        """
        return pulumi.get(self, "till")

    @property
    @pulumi.getter(name="repeatFrequency")
    def repeat_frequency(self) -> Optional[str]:
        """
        repeat frequency. ('day', 'week', '2 weeks', '3 weeks', 'month')
        """
        return pulumi.get(self, "repeat_frequency")

    @property
    @pulumi.getter(name="repeatTill")
    def repeat_till(self) -> Optional[str]:
        """
        Till when you want to repeat this Maintenance mode
        """
        return pulumi.get(self, "repeat_till")


