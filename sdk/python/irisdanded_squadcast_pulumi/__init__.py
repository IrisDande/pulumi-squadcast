# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from . import _utilities
import typing
# Export this package's modules as members:
from .deduplication_rule_v2 import *
from .escalation_policy import *
from .ger import *
from .ger_ruleset import *
from .ger_ruleset_rule import *
from .ger_ruleset_rules_ordering import *
from .get_escalation_policy import *
from .get_runbook import *
from .get_schedule import *
from .get_schedule_v2 import *
from .get_service import *
from .get_squad import *
from .get_team import *
from .get_team_role import *
from .get_user import *
from .get_webform import *
from .provider import *
from .routing_rule_v2 import *
from .runbook import *
from .schedule import *
from .schedule_rotation_v2 import *
from .schedule_v2 import *
from .service import *
from .service_maintenance import *
from .slo import *
from .squad import *
from .status_page import *
from .status_page_component import *
from .status_page_group import *
from .suppression_rule_v2 import *
from .tagging_rule_v2 import *
from .team import *
from .team_member import *
from .team_role import *
from .user import *
from .webform import *
from .workflow import *
from .workflow_action import *
from .workflow_action_ordering import *
from ._inputs import *
from . import outputs

# Make subpackages available:
if typing.TYPE_CHECKING:
    import irisdanded_squadcast_pulumi.config as __config
    config = __config
    import irisdanded_squadcast_pulumi.deduplication as __deduplication
    deduplication = __deduplication
    import irisdanded_squadcast_pulumi.routing as __routing
    routing = __routing
    import irisdanded_squadcast_pulumi.suppression as __suppression
    suppression = __suppression
    import irisdanded_squadcast_pulumi.tagging as __tagging
    tagging = __tagging
else:
    config = _utilities.lazy_import('irisdanded_squadcast_pulumi.config')
    deduplication = _utilities.lazy_import('irisdanded_squadcast_pulumi.deduplication')
    routing = _utilities.lazy_import('irisdanded_squadcast_pulumi.routing')
    suppression = _utilities.lazy_import('irisdanded_squadcast_pulumi.suppression')
    tagging = _utilities.lazy_import('irisdanded_squadcast_pulumi.tagging')

_utilities.register(
    resource_modules="""
[
 {
  "pkg": "squadcast",
  "mod": "deduplication/rules",
  "fqn": "irisdanded_squadcast_pulumi.deduplication",
  "classes": {
   "squadcast:deduplication/rules:Rules": "Rules"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "index/deduplicationRuleV2",
  "fqn": "irisdanded_squadcast_pulumi",
  "classes": {
   "squadcast:index/deduplicationRuleV2:DeduplicationRuleV2": "DeduplicationRuleV2"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "index/escalationPolicy",
  "fqn": "irisdanded_squadcast_pulumi",
  "classes": {
   "squadcast:index/escalationPolicy:EscalationPolicy": "EscalationPolicy"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "index/ger",
  "fqn": "irisdanded_squadcast_pulumi",
  "classes": {
   "squadcast:index/ger:Ger": "Ger"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "index/gerRuleset",
  "fqn": "irisdanded_squadcast_pulumi",
  "classes": {
   "squadcast:index/gerRuleset:GerRuleset": "GerRuleset"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "index/gerRulesetRule",
  "fqn": "irisdanded_squadcast_pulumi",
  "classes": {
   "squadcast:index/gerRulesetRule:GerRulesetRule": "GerRulesetRule"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "index/gerRulesetRulesOrdering",
  "fqn": "irisdanded_squadcast_pulumi",
  "classes": {
   "squadcast:index/gerRulesetRulesOrdering:GerRulesetRulesOrdering": "GerRulesetRulesOrdering"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "index/routingRuleV2",
  "fqn": "irisdanded_squadcast_pulumi",
  "classes": {
   "squadcast:index/routingRuleV2:RoutingRuleV2": "RoutingRuleV2"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "index/runbook",
  "fqn": "irisdanded_squadcast_pulumi",
  "classes": {
   "squadcast:index/runbook:Runbook": "Runbook"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "index/schedule",
  "fqn": "irisdanded_squadcast_pulumi",
  "classes": {
   "squadcast:index/schedule:Schedule": "Schedule"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "index/scheduleRotationV2",
  "fqn": "irisdanded_squadcast_pulumi",
  "classes": {
   "squadcast:index/scheduleRotationV2:ScheduleRotationV2": "ScheduleRotationV2"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "index/scheduleV2",
  "fqn": "irisdanded_squadcast_pulumi",
  "classes": {
   "squadcast:index/scheduleV2:ScheduleV2": "ScheduleV2"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "index/service",
  "fqn": "irisdanded_squadcast_pulumi",
  "classes": {
   "squadcast:index/service:Service": "Service"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "index/serviceMaintenance",
  "fqn": "irisdanded_squadcast_pulumi",
  "classes": {
   "squadcast:index/serviceMaintenance:ServiceMaintenance": "ServiceMaintenance"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "index/slo",
  "fqn": "irisdanded_squadcast_pulumi",
  "classes": {
   "squadcast:index/slo:Slo": "Slo"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "index/squad",
  "fqn": "irisdanded_squadcast_pulumi",
  "classes": {
   "squadcast:index/squad:Squad": "Squad"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "index/statusPage",
  "fqn": "irisdanded_squadcast_pulumi",
  "classes": {
   "squadcast:index/statusPage:StatusPage": "StatusPage"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "index/statusPageComponent",
  "fqn": "irisdanded_squadcast_pulumi",
  "classes": {
   "squadcast:index/statusPageComponent:StatusPageComponent": "StatusPageComponent"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "index/statusPageGroup",
  "fqn": "irisdanded_squadcast_pulumi",
  "classes": {
   "squadcast:index/statusPageGroup:StatusPageGroup": "StatusPageGroup"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "index/suppressionRuleV2",
  "fqn": "irisdanded_squadcast_pulumi",
  "classes": {
   "squadcast:index/suppressionRuleV2:SuppressionRuleV2": "SuppressionRuleV2"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "index/taggingRuleV2",
  "fqn": "irisdanded_squadcast_pulumi",
  "classes": {
   "squadcast:index/taggingRuleV2:TaggingRuleV2": "TaggingRuleV2"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "index/team",
  "fqn": "irisdanded_squadcast_pulumi",
  "classes": {
   "squadcast:index/team:Team": "Team"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "index/teamMember",
  "fqn": "irisdanded_squadcast_pulumi",
  "classes": {
   "squadcast:index/teamMember:TeamMember": "TeamMember"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "index/teamRole",
  "fqn": "irisdanded_squadcast_pulumi",
  "classes": {
   "squadcast:index/teamRole:TeamRole": "TeamRole"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "index/user",
  "fqn": "irisdanded_squadcast_pulumi",
  "classes": {
   "squadcast:index/user:User": "User"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "index/webform",
  "fqn": "irisdanded_squadcast_pulumi",
  "classes": {
   "squadcast:index/webform:Webform": "Webform"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "index/workflow",
  "fqn": "irisdanded_squadcast_pulumi",
  "classes": {
   "squadcast:index/workflow:Workflow": "Workflow"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "index/workflowAction",
  "fqn": "irisdanded_squadcast_pulumi",
  "classes": {
   "squadcast:index/workflowAction:WorkflowAction": "WorkflowAction"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "index/workflowActionOrdering",
  "fqn": "irisdanded_squadcast_pulumi",
  "classes": {
   "squadcast:index/workflowActionOrdering:WorkflowActionOrdering": "WorkflowActionOrdering"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "routing/rules",
  "fqn": "irisdanded_squadcast_pulumi.routing",
  "classes": {
   "squadcast:routing/rules:Rules": "Rules"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "suppression/rules",
  "fqn": "irisdanded_squadcast_pulumi.suppression",
  "classes": {
   "squadcast:suppression/rules:Rules": "Rules"
  }
 },
 {
  "pkg": "squadcast",
  "mod": "tagging/rules",
  "fqn": "irisdanded_squadcast_pulumi.tagging",
  "classes": {
   "squadcast:tagging/rules:Rules": "Rules"
  }
 }
]
""",
    resource_packages="""
[
 {
  "pkg": "squadcast",
  "token": "pulumi:providers:squadcast",
  "fqn": "irisdanded_squadcast_pulumi",
  "class": "Provider"
 }
]
"""
)
